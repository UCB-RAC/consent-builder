//ant.importBuild 'build.xml'

apply plugin: 'scala'
apply plugin: 'war'
apply plugin: 'eclipse'

repositories {
	maven { url "http://128.32.16.155/nexus/content/groups/public/" }
	maven { url "http://128.32.16.155/nexus/content/repositories/external-non-free/" }
	maven { url "http://maven.vaadin.com/vaadin-addons/" }
}

configurations {
	vaadin
	gwt
	functionalTestCompile
}

dependencies {

	def scalaVersion = '2.9.3'
    // Libraries needed to run the scala tools
    scalaTools "org.scala-lang:scala-compiler:${scalaVersion}"
	
    // Libraries needed for scala api
    compile "org.scala-lang:scala-library:${scalaVersion}"

	vaadin 'com.vaadin:vaadin:6.8.2'
	vaadin 'org.vaadin.addons:ckeditor-wrapper-for-vaadin:1.6.6'

	compile configurations.vaadin
	compile 'org.vaadin.addons:stuff4vaadin:0.0.1'
	compile 'org.vaadin.addons:i18n4vaadin:0.9.1'
	
	// Persistence
//	compile 'org.hibernate:hibernate-core:4.1.6.Final'
	compile 'org.hibernate:hibernate-core:3.6.9.Final'
	runtime 'javassist:javassist:3.12.1.GA'
	runtime 'com.h2database:h2:1.3.168'
	runtime 'com.oracle:oracle-jdbc6:11.2.0.3'
	
	def springVersion = '3.1.2.RELEASE'
	compile "org.springframework:spring-context:${springVersion}"
	compile "org.springframework:spring-web:${springVersion}"
	compile "org.springframework:spring-orm:${springVersion}"
	compile 'org.springframework.ldap:spring-ldap-core:1.3.1.RELEASE'

	// can we use 3.2.1? It needs commons-logging 1.1, which might not be compatible
	compile('org.jasig.cas.client:cas-client-core:3.2.1') {
		exclude module: 'servlet-api'
		exclude group: 'org.springframework'
	}
	
	compile 'org.docx4j:docx4j:2.8.0'

	def gwtVersion = '2.4.0'
	gwt "com.google.gwt:gwt-dev:${gwtVersion}"
	gwt "com.google.gwt:gwt-user:${gwtVersion}"
	gwt configurations.vaadin
	
	providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
	
	functionalTestCompile configurations.compile
}

sourceSets {
	functionalTest {
		scala {
			srcDir 'src/functional-test/scala'
		}
		compileClasspath = sourceSets.main.output + configurations.compile
	}
}

task compileGwt (dependsOn: classes, type: JavaExec) {
	ext {
		buildDir = "${project.buildDir}/war/VAADIN/widgetsets"
		extraDir = "${project.buildDir}/gwt/extra"
	}

	inputs.file configurations.gwt.files { dep -> dep.name == "ckeditor-wrapper-for-vaadin" }
	outputs.dir buildDir
	 
	doFirst {
		file(buildDir).mkdirs()
	}
	 
	main = 'com.google.gwt.dev.Compiler'
	 
	classpath = configurations.gwt
	 
	args = [
		'org.vaadin.openesignforms.ckeditor.widgetset.VaadinCKEditorWidgetset', // GWT module
		'-war', buildDir,
		'-logLevel', 'INFO',
		'-localWorkers', '2',
		'-compileReport',
		'-extra', extraDir
	]
	
	jvmArgs = ['-Xmx256M', '-Xss1024k', '-Djava.awt.headless=true']
}
 
war.dependsOn compileGwt
war {
    from "${project.buildDir}/war"
}

// render the list of questions to HTML
task generate_question_docs << {
	ant.xslt(style: 'src/build/style/questiondoc.xsl',
			 in: 'src/main/resources/edu/berkeley/rac/ophs/consentBuilder/formContext.xml',
			 out: '${project.buildDir}/questiondoc.html')
}

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.5.0'
	}
}

apply plugin: 'license'

license {
	mapping {
		scala = 'SLASHSTAR_STYLE'
	}
}